x-default-user: &default-user-environment
  DEFAULT_USER_LOGIN: ${DEFAULT_USER_LOGIN:-default_login}
  DEFAULT_USER_PASSWORD: ${DEFAULT_USER_PASSWORD:-default_password}

x-psql-environment: &psql-environment
  POSTGRES_USER: ${POSTGRES_USER:-postgres}
  POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-warehouses}
  POSTGRES_HOST: ${POSTGRES_HOST:-db}
  POSTGRES_DB: ${POSTGRES_DB:-warehouse_db}
  POSTGRES_PORT: ${POSTGRES_PORT:-5432}

x-rmq-environment: &rmq-environment
  RABBITMQ_HOST: ${RABBITMQ_HOST:-rabbitmq}
  RABBITMQ_PORT: ${RABBITMQ_PORT:-5672}


services:
  api:
    build:
      dockerfile:
        ./ci_cd/api.Dockerfile
    environment:
       <<: [*psql-environment, *rmq-environment, *default-user-environment]
    ports:
      - 8000:8000
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_started
      only-local-migrate:
        condition: service_completed_successfully
    restart: on-failure
    command: uvicorn warehouse_service.web_api.main:init_app --host 0.0.0.0 --port 8000

  only-local-migrate:
    build:
      dockerfile:
        ./ci_cd/api.Dockerfile
    environment:
       <<: [*psql-environment, *rmq-environment, *default-user-environment]
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    command: upgrade && create-default-user

  db:
    image: postgres:17.5-bookworm
    shm_size: 4gb
    command: [
      "postgres", 
      "-c",
      "log_destination=stderr", 
      "-c", 
      "log_min_duration_statement=0.1",
    ]
    restart: always
    environment:
      <<: *psql-environment
    ports:
      - 5432:5432
    volumes:
      - postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-warehouse_db}"]
      interval: 5s
      timeout: 5s
      retries: 10

  rabbitmq:
    image: rabbitmq:4.1.2-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 10s
      timeout: 5s
      retries: 5


volumes:
  postgres: